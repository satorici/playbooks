settings:
  name: "pytest - enhanced unit test for Python"
  image: python

install:
  - python -m venv venv >>/dev/null
  - venv/bin/pip install --upgrade pip setuptools wheel -q --disable-pip-version-check --root-user-action=ignore
  - venv/bin/pip install pytest -q --disable-pip-version-check --root-user-action=ignore
  - |
    if [ -f "pyproject.toml" ]; then
      echo "Found pyproject.toml, attempting installation..."
      venv/bin/pip install -e .[dev,test,testing,tests,lint,docs] 2>/dev/null || \
      venv/bin/pip install -e .[test,testing] 2>/dev/null || \
      venv/bin/pip install -e . 2>/dev/null || \
      echo "Failed to install via pyproject.toml"
    fi
  - |
    if [ -f "setup.py" ] && [ ! -f "pyproject.toml" ]; then
      echo "Found setup.py, attempting installation..."
      venv/bin/pip install -e .[dev,test,testing,tests] 2>/dev/null || \
      venv/bin/pip install -e . 2>/dev/null || \
      echo "Failed to install via setup.py"
    fi
  - |
    for req_file in requirements.txt requirements/test.txt requirements-test.txt test-requirements.txt requirements/testing.txt requirements/dev.txt dev-requirements.txt; do
      if [ -f "$req_file" ]; then
        echo "Installing from $req_file"
        venv/bin/pip install -r "$req_file" || echo "Failed to install $req_file"
      fi
    done
  - |
    find . -maxdepth 3 \( -name "*requirements*.txt" -o -name "requirements*.txt" \) | head -10 | while read req_file; do
      if [ -f "$req_file" ]; then
        echo "Installing from $req_file"
        venv/bin/pip install -r "$req_file" || echo "Failed to install $req_file"
      fi
    done
  - venv/bin/pip install pytest-xdist pytest-cov pytest-mock pytest-html pytest-json-report -q --disable-pip-version-check --root-user-action=ignore
  - venv/bin/pip install tomli packaging setuptools wheel -q --disable-pip-version-check --root-user-action=ignore
  - venv/bin/pip install binaryornot filelock fields pyjson5 selenium pydantic_ai -q --disable-pip-version-check --root-user-action=ignore
  - |
    if [ "${TORCH_CPU:-0}" = "1" ]; then
      venv/bin/pip install --index-url https://download.pytorch.org/whl/cpu torch
    fi
  - venv/bin/pip list
  - "venv/bin/python -c 'import pytest; print(f\"pytest version: {pytest.__version__}\")'"
  - ls -la

pytest:
  assertReturnCode: 1
  run:
    - |
      CMD=""
      if [ -d "tests" ]; then
        echo "Running tests from tests/ directory"
        CMD="venv/bin/pytest tests/ -v --tb=short --disable-warnings"
      elif [ -d "test" ]; then
        echo "Running tests from test/ directory"
        CMD="venv/bin/pytest test/ -v --tb=short --disable-warnings"
      else
        echo "Auto-discovering test files"
        if find . -name "test_*.py" -o -name "*_test.py" | head -5 | grep -q .; then
          CMD="venv/bin/pytest -v --tb=short --disable-warnings"
        else
          echo "No test files found with standard naming convention"
          venv/bin/pytest . -v --tb=short --disable-warnings --collect-only
          exit 0
        fi
      fi
      echo "$CMD"
      eval "$CMD"
