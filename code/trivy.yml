settings:
  name: Trivy
  description: |
               Trivy has scanners that look for security issues, and targets where it can find those issues.

               Targets (what Trivy can scan):
               - Container Image
               - Filesystem
               - Git Repository (remote)
               - Virtual Machine Image
               - Kubernetes

               Scanners (what Trivy can find there):
               - OS packages and software dependencies in use (SBOM)
               - Known vulnerabilities (CVEs)
               - IaC issues and misconfigurations
               - Sensitive information and secrets
               - Software licenses

install:
  #- export DEBIAN_FRONTEND=noninteractive; apt-get update >>/dev/null 2>>/dev/null && apt-get install -qy curl >>/dev/null 2>>/dev/null 
  - command -v curl >/dev/null 2>&1 || (export DEBIAN_FRONTEND=noninteractive; apt-get update -qq >/dev/null 2>&1 && apt-get install -qy curl >/dev/null 2>&1)
  #- curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
  - command -v trivy >/dev/null 2>&1 || curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

trivy:
  run:
    - trivy fs .
    
  critical:
    setOutput: trivy.run
    setSeverity: 1
    assertStdoutNotRegex: "CRITICAL: [1-9].*"
    
  high:
    setOutput: trivy.run
    setSeverity: 2
    assertStdoutNotRegex: "HIGH: [1-9].*"

  medium:
    setOutput: trivy.run
    setSeverity: 3
    assertStdoutNotRegex: "MEDIUM: [1-9].*"
    
  low:
    setOutput: trivy.run
    setSeverity: 4
    assertStdoutNotRegex: "LOW: [1-9].*"

  info:
    setOutput: trivy.run
    setSeverity: 5
    assertStdoutNotRegex: "UNKNOWN: [1-9].*"
