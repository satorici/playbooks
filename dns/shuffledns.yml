settings:
  name: "shuffleDNS: enumerate valid subdomains using active bruteforce and resolving subdomains"
  description: "shuffledns resolves and filters subdomains by combining wordlist-based brute forcing with mass DNS resolution using multiple resolvers. It helps identify active subdomains efficiently during reconnaissance and security assessments."
  image: golang
  author:
    - https://github.com/projectdiscovery
  gallery:
    - https://files.catbox.moe/i41akq.png
  example: satori run satori://dns/shuffledns.yml -d DOMAIN="satori.ci\nquorumcyber.com" --report --output

shuffledns:
  install:
    - go install github.com/projectdiscovery/shuffledns/cmd/shuffledns@latest 2>>/dev/null
    - apt-get update >>/dev/null; apt-get install git make gcc -qy >>/dev/null
    - cd /tmp; git clone https://github.com/blechschmidt/massdns.git; cd massdns; make
    - mkdir -p /tmp/wordlists
    - curl -s https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/DNS/subdomains-top1million-5000.txt -o /tmp/wordlists/subdomains.txt
    - printf "${{DOMAIN}}" > /tmp/domains.txt

  help:
    - shuffledns -h

  test:
    assertReturnCode: 0
    assertStderrNotContains: ERR
    run:
      - while read domain; do echo "=== Scanning $domain ==="; shuffledns -d "$domain" -w /tmp/wordlists/subdomains.txt -m /tmp/massdns/bin/massdns -r /tmp/massdns/lists/resolvers.txt -mode bruteforce; done < /tmp/domains.txt
